{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","appointmentCtrl","$http","$scope","meanData","vm","this","appointments","currentPage","pageSize","user","logout","alert","console","log","numberOfPages","Math","ceil","length","get","headers","Authorization","getToken","success","data","error","e","redirectAddApp","onSub","newAppointment","errorMessages","undefined","date","time","complain","push","Date","getHours","post","app","$inject","filter","input","start","slice","homeCtrl","profileCtrl","getProfile","doctors","redirectAddDoctor","store","doctor","sessionStorage","JSON","stringify","r","doctor_email","window","location","reload","doctor_name","speciality","onSubmit","parse","registerCtrl","credentials","name","email","password","register","err","then","strongRegularExp","RegExp","mediumRegularExp","checkpwdStrength","width","height","float","validationInputPwdText","value","test","loginCtrl","login","cUser","currentUser","$window","saveToken","token","localStorage","payload","split","atob","exp","now","removeItem","service","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      }).when('/appointment',{ \n        templateUrl: '/appointment/appointment.view.html',\n        controller:'appointmentCtrl',\n        controllerAs:'vm'\n      }).when('/appointment/new',{\n        templateUrl: '/appointment/addappointment.view.html',\n        controller:'appointmentCtrl',\n        controllerAs:'vm'\n      }).when('/doctor',{\n        templateUrl: '/admin/doctor/doctor.view.html',\n        controller:'doctorCtrl',\n        controllerAs:'vm'\n      }).when('/doctor/new',{\n        templateUrl:'/admin/doctor/add_doctor.view.html',\n        controller:'insertdoctorCtrl',\n        controllerAs:'vm'\n      }).when('/update', {\n      templateUrl: '/admin/doctor/update.view.html',\n      controller: 'updateDoctorCtrl',\n      controllerAs: 'vm'\n    })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n(function() {\r\n  \r\n  var app = angular\r\n    .module('meanApp'/*,['ngTouch','ui.grid', 'ui.grid.pagination']*/)\r\n    .controller('appointmentCtrl', appointmentCtrl);\r\n\r\n  appointmentCtrl.$inject = ['$location', 'authentication','$http','$scope','meanData'];\r\n  function appointmentCtrl($location, authentication, $http,$scope, meanData) {\r\n\r\n    var vm = this;\r\n    vm.appointments = []\r\n    vm.currentPage = 0;\r\n    vm.pageSize = 3;\r\n    vm.user = {};\r\n\r\n    vm.logout = function(){\r\n      alert(\"clicked\");\r\n      console.log(\"logout\");\r\n      authentication.logout();\r\n      $location.path('/login');\r\n    }\r\n\r\n      vm.numberOfPages=function(){\r\n        return Math.ceil(vm.appointments.length/vm.pageSize);                \r\n      }\r\n    console.log(\"hello\");\r\n\r\n    //display appointments\r\n    $http.get('/api/appointment', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      }).success(function(data) {\r\n        \r\n        vm.appointments = data;\r\n        console.log(vm.appointments);\r\n          })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n\r\n      //redirect to Add Appointment page after list appointment page\r\n      $scope.redirectAddApp = function(){\r\n      $location.path('/appointment/new');\r\n   }\r\n\r\n    // Insert new appointment to mongoose\r\n     $scope.onSub = function () {\r\n      console.log(\"Hey there\");\r\n      console.log($scope.newAppointment);\r\n\r\n      //validations to add new appointment\r\n      $scope.errorMessages = [];\r\n\r\n      if($scope.newAppointment.date == undefined || $scope.newAppointment.time == undefined || $scope.newAppointment.complain == undefined || $scope.newAppointment.complain == '') {\r\n      $scope.errorMessages.push(\"All three fields are requied!\");\r\n      return;\r\n    }\r\n\r\n    if($scope.newAppointment.complain.length < 10) {\r\n      $scope.errorMessages.push(\"Complain must be at least 10 characters long!\");\r\n      \r\n    }\r\n\r\n    if($scope.newAppointment.date < new Date()) {\r\n      $scope.errorMessages.push(\"You can only add a future appointment!\");\r\n    }\r\n\r\n  \r\n    if(8 > $scope.newAppointment.time.getHours() || $scope.newAppointment.time.getHours() > 16) {\r\n      $scope.errorMessages.push(\"Appointment must be between 8am and 5pm!\");\r\n    }\r\n\r\n     $http.post('/api/appointment/new',$scope.newAppointment).success(function(data){\r\n        console.log(\"Success\");\r\n        //redirect to appointment view page after successfully inserted/posted to db\r\n        $location.path('/appointment');\r\n\r\n      }).error(function(error){\r\n        console.error(\"error in inserting data\", error);\r\n      })\r\n\r\n  }\r\n\r\n};\r\n\r\n\r\n//pagination code\r\n\r\n//let's make a startFrom filter\r\napp.filter('startFrom', function() {\r\n  return function(input, start) {\r\n        start = +start; //parse to int\r\n        return input.slice(start);\r\n      }\r\n    });\r\n\r\n})();\r\n      \r\n\r\n\r\n  \r\n\r\n\r\n\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n      console.log('Home controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData','authentication'];\n  function profileCtrl($location, meanData, authentication) {\n    var vm = this;\n\n    vm.user = {};\n\n\n    vm.logout = function(){\n      authentication.logout();\n      $location.path('login');\n    }\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n        console.log(vm.user);\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\nvar app = angular.module('meanApp')\r\n\r\n   app.controller('doctorCtrl', ['$location', 'authentication','$http','$scope','meanData', function($location, authentication, $http,$scope, meanData){\r\n\r\n    var vm = this;\r\n    vm.doctors = []\r\n    vm.currentPage = 0;\r\n    vm.pageSize = 3;\r\n    vm.user = {};\r\n\r\n    vm.logout = function(){\r\n      alert(\"clicked\");\r\n      console.log(\"logout\");\r\n      authentication.logout();\r\n      $location.path('/login');\r\n    }\r\n\r\n      vm.numberOfPages=function(){\r\n        return Math.ceil(vm.doctors.length/vm.pageSize);                \r\n      }\r\n    console.log(\"hello\");\r\n\r\n    //display doctor's list\r\n    $http.get('/api/admin/doctor').success(function(data) {\r\n        \r\n        vm.doctors = data;\r\n        console.log(vm.doctors);\r\n          })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n\r\n       $scope.redirectAddDoctor = function(){\r\n      $location.path('doctor/new');\r\n   }\r\n\r\n\r\n   // delete and edit doctor\r\n    vm.store = function(doctor){\r\n    sessionStorage['doctor'] = JSON.stringify(doctor)\r\n    $location.path('update');\r\n  }\r\n\r\n  vm.delete = function(r){\r\n    $http.post('/api/admin/doctor/delete', {doctor_email: r.doctor_email}).success(function(data) {\r\n      console.log('response..', data);\r\n      window.location.reload(true);\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n    });\r\n  }\r\n\r\n}]);\r\n\r\n\r\napp.controller('insertdoctorCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"add doctor controller is running...\");\r\n  var vm = this\r\n  vm.doctor = {\r\n    doctor_name: '',\r\n    doctor_email: '',\r\n    speciality: '',\r\n   // email: '',\r\n  }\r\n  \r\n //var cUser = authentication.currentUser();\r\n //vm.doctor.email = cUser.email;\r\n//console.log(vm.doctor.email);\r\n  //var test = \"namrata\";\r\n  vm.onSubmit = function () {\r\n    console.log('Submitting new form');\r\n    console.log(vm.doctor);\r\n    $http.post('/api/admin/doctor/new', vm.doctor).success(function(data) {\r\n      console.log('response..', data);\r\n      alert(\"Registered Successfully!!!\");\r\n      $location.path('doctor');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n      alert(\"Duplicate Email!!!\");\r\n    });\r\n  }\r\n\r\n}]);\r\n\r\napp.controller('updateDoctorCtrl',['$http', 'authentication', '$location', function($http, authentication, $location) {\r\n  console.log(\"update doctor controller is running...\");\r\n  var vm = this\r\n  var doctor = JSON.parse(sessionStorage.doctor);\r\n  vm.doctor = {\r\n    doctor_name: doctor.doctor_name,\r\n    doctor_email:  doctor.doctor_email,\r\n    speciality: doctor.speciality,\r\n    //time_start: doctor.time_start,\r\n    //time_end: doctor.time_end\r\n  }\r\n  \r\n  vm.onSubmit = function () {\r\n    console.log('Submitting new form');\r\n    $http.post('/api/admin/doctor/update', vm.doctor).success(function(data) {\r\n      alert(\"Updated Successfully!!!\");\r\n      console.log('response..', data);\r\n      $location.path('doctor');\r\n    })\r\n    .error(function (e) {\r\n      console.log('error..', e);\r\n      alert(\"Duplicate Email!!!\");\r\n    });\r\n  }\r\n\r\n}]);\r\n\r\n\r\n\r\n\r\n\r\napp.filter('startFrom', function() {\r\n  return function(input, start) {\r\n        start = +start; //parse to int\r\n        return input.slice(start);\r\n      }\r\n    });\r\n \r\n\r\n\r\n\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication', '$scope'];\n  function registerCtrl($location, authentication, $scope) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\",\n      //role: \"\"\n    };\n\n    vm.onSubmit = function () {\n      $scope.errorMessages = [];\n      if($scope.vm.credentials.password.length < 8) {\n              $scope.errorMessages.push(\"Password must be atleast 8 characters long...Atleast 1 Alphabet! .... 1 Number...1 Special Character\");\n        }\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n             alert(\"Duplicate Email!!!\");\n        }).success(function(err){alert(\"Registered Successfully!!!\");})\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n    \n     var strongRegularExp = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n      var mediumRegularExp = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\n\n      $scope.checkpwdStrength = {\n        \"width\": \"150px\",\n        \"height\": \"25px\",\n        \"float\": \"right\"\n      };\n\n\n\n      $scope.validationInputPwdText = function(value) {\n        if (strongRegularExp.test(value)) {\n          $scope.checkpwdStrength[\"background-color\"] = \"green\";\n        } else if (mediumRegularExp.test(value)) {\n          $scope.checkpwdStrength[\"background-color\"] = \"orange\";\n        } else {\n          $scope.checkpwdStrength[\"background-color\"] = \"red\";\n        }\n\n        \n      };\n\n\n\n\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n      vm.onSubmit = function () {\n        authentication.login(vm.credentials)\n        .error(function(err){\n        console.log(err);\n        alert(\"Login Failed!!!\");\n        }).then(function(){\n        console.log('login sucessfull');\n        alert(\"Login Successful\");\n        //console.log(authentication.getUserRole()+\"hiiii\");\n        var cUser = authentication.currentUser();\n        console.log(cUser.email);\n          if(cUser.email == 'admin@healthcare.com'){\n          $location.path('doctor');\n        }else{\n          sessionStorage['user'] = JSON.stringify(cUser)\n          $location.path('/appointment');\n        }\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      //console.log(\"hhiii\");\n      $window.localStorage['mean-token'] = token;\n    };\n    /*var saveUserRole = function (role) {\n      //console.log(\"hhiii\");\n      $window.localStorage['user-role'] = role;\n    };*/\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    /*var getUserRole = function () {\n      //console.log(\"hhiii\");\n      return $window.localStorage['user-role'];\n    };*/\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      //var role = getUserRole();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        sessionStorage['user'] = JSON.stringify(user);\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n     return $http.post('/api/login', user).success(function(data) {\n        //console.log(data.role);\n        console.log(data.token);\n        saveToken(data.token);\n        //saveUserRole(data.role);\n        \n      });\n    };\n\n    logout = function(user) {\n      $window.localStorage.removeItem('mean-token');\n      //$window.localStorage.removeItem('user-role');\n      //localStorage.removeItem('mean-token');\n        };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n      //saveUserRole : saveUserRole,\n      //getUserRole: getUserRole\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      console.log(\"getting profile\");\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n    //vm.userRole = authentication.getUserRole();\n    }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"]}